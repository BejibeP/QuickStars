version: "3.9"

networks:
  snapops:
    external: true

services:

  #grafana:
    #image: grafana/grafana:latest
    #container_name: grafana
    #restart: always
    #ports:
    # - "3000:3000"
    #networks:
    # - snapops
    #volumes:
    # - ${GRAFANA_DIR}:/var/lib/grafana
    # Dynamic configuration
    #labels:
    #  - grafana.enable=true
    #  - grafana.http.routers.api.entrypoints=websecure
    #  - grafana.http.routers.api.rule=Host(`${GRAFANA_URL}`)
    #  - grafana.http.routers.api.middlewares=webauth@file
    #environment:
    #  - GF_AUTH_ANONYMOUS_ENABLED=true
    #  - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    #  - GF_AUTH_BASIC_ENABLED=false
    #  - GF_AUTH_DISABLE_LOGIN_FORM=true
    #  - GF_AUTH_DISABLE_SIGNOUT_MENU=true

  #prometheus:
    #  image: prom/prometheus:latest
    #  container_name: prometheus
    #  restart: always
    #  ports:
    #    - "9090:9090"
    #  networks:
    #    - proxy
    #  volumes:
    #    - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    #    - /apps/prometheus/data:/prometheus
  
  #loki:
    #  image: grafana/loki:latest
    #  container_name: loki
    #  restart: always
    #  ports:
    #    - "3100:3100"
    #  networks:
    #    - proxy
    #  volumes:
    #    - ./loki/local-config.yaml:/etc/loki/local-config.yaml
    #    - /apps/loki/data:/loki

  watchtower:
    image: containrrr/watchtower:1.5.3
    container_name: watchtower
    restart: unless-stopped
    #depends_on:
    #  - loki
    networks:
      - snapops
    volumes:
      - ${DOCKER_SYMCONFIG}:/config.json
      - /var/run/docker.sock:/var/run/docker.sock:ro # Docker socket
    environment:
      - WATCHTOWER_DEBUG=false
      - WATCHTOWER_LOG_LEVEL=info
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_LABEL_ENABLE=true
      - WATCHTOWER_POLL_INTERVAL=1200
      - WATCHTOWER_TIMEOUT=30s
    #logging:
    #  driver: loki
    #  options:
    #    loki-url: "http://loki:3100/loki/api/v1/push"
    #    loki-external-labels: "container_name={{.Name}},container_id={{.FullID}}"
    #    loki-batch-size: "10"
    #    loki-batch-wait: "5s"

  traefik:
    image: traefik:v2.9.9
    container_name: traefik
    restart: always
    #depends_on:
    #  - grafana
    ports:
      - 80:80
      - 443:443
    networks:
      - snapops
    volumes:
      # Traefik configuration (Static, Dynamic, Certs)
      - ${TRAEFIK_DIR}:/etc/traefik
      # Docker socket for provider
      - /var/run/docker.sock:/var/run/docker.sock:ro
    # Dynamic configuration
    labels:
      - traefik.enable=true
      - traefik.http.routers.api.entrypoints=websecure
      - traefik.http.routers.api.service=api@internal
      - traefik.http.routers.api.rule=Host(`traefik.i.bejibe.dev`)
      - traefik.http.routers.api.middlewares=webauth@file
    #logging:
    #  driver: loki
    #  options:
    #    loki-url: "http://loki:3100/loki/api/v1/push"
    #    loki-external-labels: "container_name={{.Name}},container_id={{.FullID}}"
    #    loki-batch-size: "10"
    #    loki-batch-wait: "5s"

  heimdall:
    image: linuxserver/heimdall:2.5.6
    container_name: heimdall
    restart: always
    networks:
      - snapops
    volumes:
      - ${HEIMDALL_DIR}:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.heimdall.entrypoints=websecure
      - traefik.http.routers.heimdall.rule=Host(`${HEIMDALL_URL}`)
